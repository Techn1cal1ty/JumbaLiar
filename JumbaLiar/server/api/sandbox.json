{                                                                                                                                                                                                                                                                                  4:35:40 PM
  __is_event__: true,
  _handled: false,
  context: { _nitro: { routeRules: {} }, nitro: {}, params: {} },
  node: {
    req: IncomingMessage {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      readableEncoding: null,
      readableEnded: true,
      readableFlowing: false,
      readableHighWaterMark: 0,
      readableLength: 0,
      readableObjectMode: false,
      readableAborted: false,
      readableDidRead: false,
      closed: false,
      errored: null,
      readable: false,
      destroyed: false,
      aborted: false,
      httpVersion: '1.1',
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      complete: true,
      headers: [Object],
      trailers: {},
      method: 'POST',
      url: '/api/model',
      statusCode: 200,
      statusMessage: '',
      connection: [Socket],
      socket: [Socket],
      body: '{"rq":"wheeeeeeeeeeeee"}',
      __unenv__: undefined,
      originalUrl: '/api/model',
      [Symbol(kCapture)]: false
    },
    res: ServerResponse {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      writable: true,
      writableEnded: false,
      writableFinished: false,
      writableHighWaterMark: 0,
      writableLength: 0,
      writableObjectMode: false,
      writableCorked: 0,
      closed: false,
      errored: null,
      writableNeedDrain: false,
      destroyed: false,
      _encoding: 'utf-8',
      statusCode: 200,
      statusMessage: '',
      upgrading: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      finished: false,
      headersSent: false,
      strictContentLength: false,
      connection: null,
      socket: null,
      _headers: {},
      req: [IncomingMessage],
      [Symbol(kCapture)]: false
    }
  },
  fetch: [Function (anonymous)],
  '$fetch': [Function (anonymous)]
}
H3Event {                                                                                                                                                                                                                                                                                  4:35:40 PM
  __is_event__: true,
  _handled: false,
  context: { _nitro: { routeRules: {} }, nitro: {}, params: {} },
  node: {
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/api/model',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: false,
      originalUrl: '/api/model',
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 38,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [IncomingMessage],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: null,
      [Symbol(errored)]: null,
      [Symbol(kUniqueHeaders)]: null
    }
  },
  fetch: [Function (anonymous)],
  '$fetch': [Function (anonymous)]
}